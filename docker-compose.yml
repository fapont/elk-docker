version: '3.8'
services: 
    tshark:
        container_name: wireshark
        image: toendeavour/tshark
        volumes:
            - type: bind
              source: ./data
              target: /data
            - ./tshark/run.sh:/run.sh
        entrypoint: ['/bin/sh', '/run.sh']

    elasticsearch:
        container_name: elasticsearch
        build:
            context: elasticsearch/
        volumes:
            - type: bind
              source: ./elasticsearch/elasticsearch.yml
              target: /usr/share/elasticsearch/config/elasticsearch.yml
            - type: volume
              source: ./elasticsearch
              target: /usr/share/elasticsearch/data
        ports:
            - "9200:9200" # REST API
            - "9300:9300" # nodes communication
        environment:
            ELASTIC_PASSWORD: incredible_password
            discovery.type: single-node # only for development
        networks: 
            - elk
        mem_limit: 1g 
        # Confirm availability of elasticsearch
        healthcheck:
            test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]

    kibana:
        container_name: kibana
        build:
            context: kibana/
        volumes:
            - type: bind
              source: ./kibana/kibana.yml
              target: /usr/share/kibana/config/kibana.yml
        ports:
            - "5601:5601"
        networks: 
            - elk
        depends_on: 
            - "elasticsearch"

    logstash:
        container_name: logstash
        build:
            context: logstash/
        volumes:
            - type: bind
              source: ./logstash/logstash.yml
              target: /usr/share/logstash/config/logstash.yml
            - type: bind
              source: ./logstash/pipeline
              target: /usr/share/logstash/pipeline
        ports:
            - "5044:5044"
            - "5000:5000/tcp"
            - "5000:5000/udp"
            - "9600:9600"
        mem_limit: 1g
        networks:
            - elk
        depends_on:
            elasticsearch: { condition: service_healthy }
        healthcheck:
            test: ["CMD", "curl","-s" ,"-f", "http://localhost:9600"]

    filetbeat:
        container_name: filebeat
        build:
            context: filebeat/
        user: filebeat
        volumes:
            - type: bind
              source: ./filebeat/filebeat.yml
              target: /usr/share/filebeat/filebeat.yml
            - type: bind # json files
              source: ./data/json
              target: /data
        networks: 
            - elk
        cap_add: # needed by filebeat
            - NET_ADMIN
        depends_on: 
            logstash: { condition: service_healthy }


networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  data: